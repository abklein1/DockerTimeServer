pipeline {
    agent any
    parameters{
        choice (name: 'nodeChoice', choices: ['Green', 'Blue'], description: 'Deploy to either env: ')
        string (name: 'version', defaultValue: '', description: 'jar version to deploy')
    }
    environment {
        region = 'us-east-2'
        listenerARN = 'arn:aws:elasticloadbalancing:us-east-2:283044168142:listener/app/BG-load-balancer/fb5f67b4b97973d0/44f32aec7ee9095a'
        blueARN = 'arn:aws:elasticloadbalancing:us-east-2:283044168142:targetgroup/Blue/28fafd93d214aacb'
        greenARN = 'arn:aws:elasticloadbalancing:us-east-2:283044168142:targetgroup/Green/4cf40e1547e1c331'
        blueTarget = 'ubuntu@ec2-3-16-114-63.us-east-2.compute.amazonaws.com'
        greenTarget = 'ubuntu@ec2-3-143-251-12.us-east-2.compute.amazonaws.com'
    }
    stages {
        stage('Begin Deploy') {
            parallel {
                stage('Green') {
                    when {
                        expression {
                            params.nodeChoice == 'Green'
                        }
                    }
                    stages {
                        stage('Offloading Green') {
                            steps {
                                sh """aws elbv2 modify-listener --region ${region} --listener-arn ${listenerARN} --default-actions '[{"Type": "forward","Order": 1,"ForwardConfig": {"TargetGroups": [{"TargetGroupArn": "${greenARN}", "Weight": 0 },{"TargetGroupArn": "${blueARN}", "Weight": 1 }],"TargetGroupStickinessConfig": {"Enabled": true,"DurationSeconds": 1}}}]'"""
                            }
                        }
                        stage('Deploying to Green') {
                            steps {
                                sh '''scp -v -o StrictHostKeyChecking=no -i /var/lib/jenkins/secrets/keypairklein.pem TimeServer/target/*.jar ${greenTarget}:${version}'''
                                script {
                                    sh '''
                                        JENKINS_NODE_COOKIE=dontKillMe ssh -i /var/lib/jenkins/secrets/keypairklein.pem -tt ${greenTarget} "sudo ./start.sh"
                                    '''
                                }
                            }
                        }
                        stage('Green ReAdd') {
                            steps {
                                sh """
                                    aws elbv2 modify-listener --region ${region} --listener-arn ${listenerARN} --default-actions '[{"Type": "forward","Order": 1,"ForwardConfig": {"TargetGroups": [{"TargetGroupArn": "${greenARN}", "Weight": 1 },{"TargetGroupArn": "${blueARN}", "Weight": 1 }],"TargetGroupStickinessConfig": {"Enabled": true,"DurationSeconds": 1}}}]'
                                """
                            }
                        }
                    }
                }
                stage('Blue') {
                    when {
                        expression {
                            params.nodeChoice == 'Blue'
                        }
                    }
                    stages {
                        stage('Offloading Blue') {
                            steps {
                                sh """aws elbv2 modify-listener --listener-arn ${listenerARN} --default-actions '[{"Type": "forward","Order": 1,"ForwardConfig": {"TargetGroups": [{"TargetGroupArn": "${greenARN}", "Weight": 1 },{"TargetGroupArn": "${blueARN}", "Weight": 0 }],"TargetGroupStickinessConfig": {"Enabled": true,"DurationSeconds": 1}}}]'"""
                            }
                        }
                        stage('Deploying to Blue') {
                            steps {
                                sh '''scp -v -o StrictHostKeyChecking=no -i /var/lib/jenkins/secrets/keypairklein.pem TimeServer/target/*.jar ${blueTarget}:${version}'''
                                script {
                                    sh '''
                                        JENKINS_NODE_COOKIE=dontKillMe ssh -i /var/lib/jenkins/secrets/keypairklein.pem -tt ${blueTarget} "sudo ./start.sh"
                                    '''
                                }
                            }
                        }
                        stage('Blue ReAdd') {
                            steps {
                                sh """
                                    aws elbv2 modify-listener --listener-arn ${listenerARN} --default-actions '[{"Type": "forward","Order": 1,"ForwardConfig": {"TargetGroups": [{"TargetGroupArn": "${greenARN}", "Weight": 1 },{"TargetGroupArn": "${blueARN}", "Weight": 1 }],"TargetGroupStickinessConfig": {"Enabled": true,"DurationSeconds": 1}}}]'
                                """
                            }
                        }
                    }
                }
            }
        }
    }
}